# Generated by Django 3.2.9 on 2021-12-07 21:51

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='HealthRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hasSymptoms', models.BooleanField()),
                ('hasCloseContact', models.BooleanField()),
                ('testResult', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('name', models.CharField(default='no name recorded', max_length=100, null=True)),
                ('email', models.CharField(max_length=100)),
                ('nuid', models.CharField(default='no nuid recorded', max_length=20, null=True)),
                ('password', models.CharField(max_length=100)),
                ('healthRecord', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='web_app.healthrecord')),
            ],
        ),
        migrations.CreateModel(
            name='RecordedQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('healthRecord', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='web_app.healthrecord')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_app.question')),
            ],
        ),
        migrations.AddField(
            model_name='healthrecord',
            name='questions',
            field=models.ManyToManyField(through='web_app.RecordedQuestion', to='web_app.Question'),
        ),
    ]
